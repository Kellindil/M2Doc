h1. Template development guide


{toc}


h2. Introduction and example

The M2Doc technology adopts an approach where the document authoring tools (Libre Office, Open Office, MS Word) are leverage as much as possible. What other tool is more adapted to style and static part authoring? Furthermore, these tools are quite common and widely adopted so that there's no necesity to learn yet another document authoring tool. Last but not least, there's a great deal of document models legacy all over the places that should be reused as easily as possible.

Templates are made of static parts and dynamic parts. Static parts are produced in the generated document as they are in the templates while dynamic parts are replaced by some text which depends on the input models provided. Dynamic parts are provided in fields so that there's always a clear separation between static and dynamic parts.   

Let's have an example to start with template writing. The following image represents a page of a template comprising three parts:
* a first static part that is reproduced as is in the generated result
* a dynamic part which itself comprises some static parts and which is replaced by the result of processing the template 
* a second static part reproduced as is in the generated result.

!IntroductionExample.png(An example template with a generation result)! 

A generation of the template on a database model that comprises three tables named, respectively, Customers, Providers, Products will result in the document fragment that is shown below in the image. The relation between the templates part and the generation result is highlighted with arrows. 

h2. First generation tutorial 

Before entering into the details of template writing, let's have a quick tutorial where we reproduce the introductory example step by step. 

First, make sure you have the database plug-ins installed from obeonetwork. 

h2. Template authoring overview

The development of templates encompasses different activites :
* authoring of the static fragments of the generated document : a documnent is made of static fragments that are identical over all the generated documents. This includes the setting of styles, colors, etc. for the generated document. 
* authoring of generated parts. This is a mix of writing template fields and static parts. The development of template fields follow a syntax that is described below and makes extensive use of Acceleo Query Language (AQL). The relation between the template and the model is achieved by providing values for the variables that are referenced in the AQL queries within the templates. This is described in greater details below. 

AQL is extensible by service packages that must be registered in the AQL runtime environment. The M2Doc technology provides a mecanism that can be used to contribute services through an eclipse extension. This is described below. 

h3. Definition of variables

Variables that are used within AQL queries must be defined for a generation to be able to run.  

h3. Definition of services

h2. Detailed template syntax and semantics


