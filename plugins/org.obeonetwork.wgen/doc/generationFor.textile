h2. Génération de doc pour les tags gd:for

* cas 1 : les tags gd:for et gd:endfor sont sur un seul paragraphe. @on itère sur les seuls run et on les insère au sein d'un même paragraphe.@

cas 2 : les tags gd:for et gd:endfor sont sur deux paragraphes différents


bc.. 

blahblah {gd:for v | self.eClassifiers} blahabla2
blahblah3 {gd:endfor}
p. 

Results of the processing of this for two classifiers must be like follows :

bc.. 
blahblah blahabla2
blahblah3 blahabla2
blahblah3
p. 


bc.. 

blahblah {gd:for v | self.eClassifiers} 
blahabla2
blahblah3 {gd:endfor}blah4
blah5
p. 

Results in 

bc.. 
blahblah {gd:for v | self.eClassifiers} 
blahabla2
blahblah3 {gd:endfor}blah4
blah5
p. 

# j'ajoute blahabla2 dans le dernier paragraph du repet
# je coupe le dernier paragraph juste avant le run du '{'
# j'ajoute blahblah3 juste avant le run du '{'

on peut aussi couper le dernier paragraph, ajouter tous les runs des itérations et 
recopier les runs restant du dernier paragraphe dans le dernier paragraphe généré.

on recopie les runs du body et le tempate à la fin du document, on le traite avec la variable d'itération définie dans le contexte
on recopie les runs 

h3. Mode opératoire

On transforme le template en dédoublant les éléments pour chaque itération

Dans le cas où il faut itérer 0 fois, on supprime les éléments liés à la balise for. 
Dans le cas où il y a 1+ itérations, on supprime les éléments liés aux balises {gd:for} et {gd:endfor} et on copie le template en plus iterationNb-1 fois.

On recopie tous les runs et le template. On insère un nouveau paragraphe à chaque changement de paragraphe.  


paragraph unfolding goes like follows :

p0,p1,[p2,p3],p4

p0,p1,[p2,p3],p2,p4

p0,p1,[p2,p3],p2,p3,p4

Le curseur des paragraphes avance avec les nouveaux paragraphes. 

le rang du paragraphe inséré croit de 1 en 1

pour détecter un changement de paragraphe, il faut comparer les paragraphes des runs dans le template de fin laissé intact.

Du coup, il faut démarrer le unfolding avec 

- un curseur pour insérer les paragraphes.
- un paragraphe pour débuter la copy des runs
- un paragraphe de référence pour détecter le changement de paragraphe et qui est le paragraphe du premier run traité.




   